[package]
edition = "2018"
name = "solar"
version = "0.1.0"

[features]
sol-mem-intrinsics = []

onchain = ["solana-api-types/onchain"]

offchain = [
    "solana-api-types/offchain",
    "lazy_static",
    "futures",
    "serde",
    "serde_json",
    "getrandom",
    "dashmap",
    "url",
    "log",
    "anyhow",
    "async-std",
]

wasm = ["getrandom/js", "ws_stream_wasm"]
native = ["async-tungstenite"]

test = ["solana-sdk", "solana-program"]
runtime-test = ["solana-program-test", "test"]

[dependencies]

# universal dependencies
az = "1.1.1"
byteorder = "1.4.3"
fixed = { version = "1.9.0", features = ["num-traits"] }
itoap = "1.0.1"
num-traits = "0.2.14"
parity-scale-codec = { version = "1.3.7", features = ["derive"] }
static_assertions = "1.1.0"
strum = { version = "0.21", features = ["derive"] }

solana-api-types = { path = "../solana-api-types", default-features = false }
solar-macros = { path = "../solar-macros" }

# offchain dependencies
lazy_static = { version = "1.4", optional = true }
futures = { version = "0.3", optional = true }
async-trait = { version = "0.1.51", optional = true }
serde = { version = "1.0", optional = true }
serde_json = { version = "1.0", optional = true }
getrandom = { version = "0.2.3", optional = true }
dashmap = { version = "4", optional = true }
url = { version = "2.2.2", optional = true }
log = { version = "0.4", optional = true }
anyhow = { version = "1", optional = true }
async-std = { version = "1.10", optional = true, features = ["unstable"] }
async-tungstenite = { version = "0.15", features = [
    "async-std-runtime",
], optional = true }
ws_stream_wasm = { version = "0.7.3", optional = true }

# testing dependencies
solana-program = { version = "= 1.7.2", optional = true }
solana-program-test = { version = "= 1.7.2", optional = true }
solana-sdk = { version = "= 1.7.2", optional = true }
